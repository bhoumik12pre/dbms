Consider Following Schema
Employee (Employee_id, First_name, last_name , hire_date, salary,
Job_title, manager_id, department_id)
Departments(Department_id, Department_name, Manager_id,
Location_id)
Locations(location_id ,street_address ,postal_code, city, state, country_id)
1. Write a query to find the names (first_name, last_name), the salary of
the employees who earn the same salary as the minimum salary for all
departments.
2. Write a query to display the employee ID, first name, last names, salary
of all employees whose salary is above average for their departments.
3. Write a query to find the employee id, name (last_name) along with
their manager_id, manager name (last_name).
4. Find the names and hire date of the employees who were hired after
'Jones'.
5. Write a query to get the department name and number of employees in the
department.



Creating the Tables Based on the Provided Schema


CREATE TABLE Employee (
    Employee_id INT PRIMARY KEY,
    First_name VARCHAR(50),
    Last_name VARCHAR(50),
    Hire_date DATE,
    Salary DECIMAL(10, 2),
    Job_title VARCHAR(50),
    Manager_id INT,
    Department_id INT
);

CREATE TABLE Departments (
    Department_id INT PRIMARY KEY,
    Department_name VARCHAR(50),
    Manager_id INT,
    Location_id INT
);

CREATE TABLE Locations (
    Location_id INT PRIMARY KEY,
    Street_address VARCHAR(100),
    Postal_code VARCHAR(10),
    City VARCHAR(50),
    State VARCHAR(50),
    Country_id VARCHAR(10)
);


-- Insert sample data into Locations table
INSERT INTO Locations (Location_id, Street_address, Postal_code, City, State, Country_id) VALUES
(1, '123 Main St', '110001', 'Delhi', 'Delhi', 'IN'),
(2, '456 Oak St', '90001', 'Los Angeles', 'California', 'US'),
(3, '789 Pine St', '560001', 'Bangalore', 'Karnataka', 'IN'),
(4, '101 Maple St', '10001', 'New York', 'New York', 'US');

-- Insert sample data into Departments table
INSERT INTO Departments (Department_id, Department_name, Manager_id, Location_id) VALUES
(10, 'IT', 1, 1),
(20, 'Finance', 2, 2),
(30, 'HR', 3, 3),
(40, 'IT', 4, 4),
(50, 'Sales', 5, 2);

-- Insert sample data into Employee table
INSERT INTO Employee (Employee_id, First_name, Last_name, Hire_date, Salary, Job_title, Manager_id, Department_id) VALUES
(1, 'Amit', 'Kumar', '2020-05-15', 30000, 'Software Engineer', NULL, 10),
(2, 'Rajesh', 'Singh', '2019-03-20', 50000, 'Senior Engineer', 1, 10),
(3, 'Anita', 'Patel', '2021-07-25', 45000, 'Analyst', 2, 20),
(4, 'Sunita', 'Mishra', '2018-06-30', 35000, 'Consultant', 1, 10),
(5, 'Vikram', 'Mehta', '2017-11-05', 40000, 'Engineer', 3, 30),
(6, 'Ayesha', 'Sharma', '2019-02-12', 38000, 'Developer', 1, 10),
(7, 'Ravi', 'Jones', '2020-12-18', 48000, 'Manager', 4, 40),
(8, 'Nisha', 'Yadav', '2021-01-29', 32000, 'Technician', 2, 20),
(9, 'Suresh', 'Rana', '2022-03-22', 51000, 'Lead', 4, 40),
(10, 'Pooja', 'Verma', '2020-09-10', 27000, 'HR Specialist', 5, 30);



1. Find names (first_name, last_name) and salary of employees who earn the same salary as the minimum salary for all departments

SELECT First_name, Last_name, Salary
FROM Employee
WHERE Salary = (SELECT MIN(Salary) FROM Employee);


2. Display employee ID, first name, last name, and salary of employees whose salary is above average for their department

SELECT Employee_id, First_name, Last_name, Salary
FROM Employee e
WHERE Salary > (
    SELECT AVG(Salary)
    FROM Employee
    WHERE Department_id = e.Department_id
);


3. Find employee id, name (last_name) along with their manager_id, manager name (last_name)

SELECT e.Employee_id, e.Last_name AS Employee_Name, e.Manager_id, m.Last_name AS Manager_Name
FROM Employee e
JOIN Employee m ON e.Manager_id = m.Employee_id;


4. Find names and hire dates of employees hired after 'Jones'

SELECT First_name, Last_name, Hire_date
FROM Employee
WHERE Hire_date > (
    SELECT Hire_date FROM Employee WHERE Last_name = 'Jones'
);


5. Get department name and number of employees in the department

SELECT d.Department_name, COUNT(e.Employee_id) AS Number_of_Employees
FROM Departments d
LEFT JOIN Employee e ON d.Department_id = e.Department_id
GROUP BY d.Department_name;
